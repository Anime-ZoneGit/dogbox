// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: post.sql

package db

import (
	"context"
)

const createPost = `-- name: CreatePost :one
INSERT INTO posts (
    filename, deletion_key, md5
) VALUES (
    $1, $2, $3
)
RETURNING id, filename, deletion_key, md5, created_at, updated_at
`

type CreatePostParams struct {
	Filename    string `json:"filename"`
	DeletionKey string `json:"deletion_key"`
	Md5         string `json:"md5"`
}

func (q *Queries) CreatePost(ctx context.Context, arg CreatePostParams) (*Post, error) {
	row := q.db.QueryRow(ctx, createPost, arg.Filename, arg.DeletionKey, arg.Md5)
	var i Post
	err := row.Scan(
		&i.ID,
		&i.Filename,
		&i.DeletionKey,
		&i.Md5,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}

const deletePost = `-- name: DeletePost :exec
DELETE FROM posts
WHERE id = $1
`

func (q *Queries) DeletePost(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, deletePost, id)
	return err
}

const getPost = `-- name: GetPost :one
SELECT id, filename, deletion_key, md5, created_at, updated_at FROM posts
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetPost(ctx context.Context, id int64) (*Post, error) {
	row := q.db.QueryRow(ctx, getPost, id)
	var i Post
	err := row.Scan(
		&i.ID,
		&i.Filename,
		&i.DeletionKey,
		&i.Md5,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}

const updatePost = `-- name: UpdatePost :one
UPDATE posts
SET filename = coalesce($1, filename),
    deletion_key = coalesce($2, deletion_key),
    md5 = coalesce($3, md5),
    updated_at = now()
WHERE id = $4
RETURNING id, filename, deletion_key, md5, created_at, updated_at
`

type UpdatePostParams struct {
	Filename    *string `json:"filename"`
	DeletionKey *string `json:"deletion_key"`
	Md5         *string `json:"md5"`
	ID          int64   `json:"id"`
}

func (q *Queries) UpdatePost(ctx context.Context, arg UpdatePostParams) (*Post, error) {
	row := q.db.QueryRow(ctx, updatePost,
		arg.Filename,
		arg.DeletionKey,
		arg.Md5,
		arg.ID,
	)
	var i Post
	err := row.Scan(
		&i.ID,
		&i.Filename,
		&i.DeletionKey,
		&i.Md5,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
